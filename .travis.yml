sudo: required
language: python
python:
  - "3.7"

services:
  - docker
  - mysql

dist: xenial

install:
  - pip3 install -e .
  # Install test suite dependencies
  - pip3 install -r requirements.txt

  # ================== setup test environment ==================== #
  - python3 setup.py test_settings
  # Externals must be after test_settings
  - python3 setup.py externals -s activemq

jobs:
  fast_finish: true
  include:
    - stage: test
      name: Test Native
      script:
        - mysql_upgrade --force
        - sudo service mysql restart
        # Need to do this first time
        - mysql < build/database/reset_autoreduction_db.sql
          # Install autoreduction

        - python3 setup.py database
        - cat build.log
        - _LOCAL_PYTHON_PATH=$(which python3)
        - sudo $_LOCAL_PYTHON_PATH setup.py start

        - py.test build/tests/test_db_generation.py  # perform initial check of database
        # ================ Functional tests =============== #
        - echo "Running Unit tests"
        - py.test --ignore=systemtests --cov=build --cov=monitors --cov=queue_processors --cov=scripts --cov=utils --cov=WebApp/autoreduce_webapp --cov=docker_reduction --cov=paths --cov=plotting --cov=model

        - echo "Running System Tests"
        - py.test systemtests --cov-append

        # ================ Static Analysis ================= #
        # ToDo: These should all be collapsed into one once autoreduction gets a single code package
        - pylint build
        - pylint docker_reduction
        - pylint model
        - pylint monitors
        - pylint queue_processors
        - pylint scripts
        - pylint systemtests
        - pylint utils
        - pylint plotting


    - stage: test
      name: Test Docker
      script:
        - docker pull dtasev/mysql_autoreduction:latest
        - sudo systemctl stop mysql
        - docker run --network=host --name mysql_autoreduction -dit dtasev/mysql_autoreduction:latest
        - docker logs mysql_autoreduction
        - py.test build/tests/test_db_generation.py  # perform initial check of database
        # ================ Functional tests =============== #
        - echo "Running Unit tests"
        - py.test --ignore=systemtests --cov=build --cov=monitors --cov=queue_processors --cov=scripts --cov=utils --cov=WebApp/autoreduce_webapp --cov=docker_reduction --cov=paths --cov=plotting --cov=model

        - echo "Running System Tests"
        - py.test systemtests --cov-append

        # ================ Static Analysis ================= #
        # ToDo: These should all be collapsed into one once autoreduction gets a single code package
        - pylint build
        - pylint docker_reduction
        - pylint model
        - pylint monitors
        - pylint queue_processors
        - pylint scripts
        - pylint systemtests
        - pylint utils
        - pylint plotting

after_success:
  - coveralls
