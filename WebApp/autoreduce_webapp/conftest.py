import os
import pytest

from django.core.management import call_command


@pytest.fixture(scope='session')
def django_db_setup(django_db_setup, django_db_blocker):
    """
    Get fixture data with `python manage.py dumpdata -e auth -e sessions -e contenttypes`
    The -e exclude django tables that are generated by `migrate`

    To get the tests locally I had to do:
    python manage.py makemigrations
    python manage.py migrate
    python manage.py migrate autoreduce_webapp
    python manage.py loaddata test.json

    # This is needed if you want to be able to open the WebApp locally and be logged in as
    # the "super" user. If not done you just get an AnonymousUser error as the app always expects
    # to be logged in (either as admin or from user facilities!)
    # Enter username: super, email: super@super.super, password: super
    python manage.py createsuperuser
    """
    with django_db_blocker.unblock():
        call_command('makemigrations')
        call_command('migrate')
        call_command('loaddata', f"{os.path.dirname(__file__)}/initial_db_state.json")
