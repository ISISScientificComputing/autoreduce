name: Tests

on: [push]

env:
  STRATEGY_MATRIX:
    os: ['ubuntu-16.04', 'ubuntu-18.04']
#    python: [3.7, 3.8] # we are currently using different versions of python on prod and dev
#    browser: ['chrome', 'firefox']

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ env.STRATEGY_MATRIX }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: test-user
          MYSQL_PASSWORD: pass
          MYSQL_DATABASE: autoreduction
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: ./.github/actions/build-autoreduction

      - name: Perform initial check of database
        run: pytest build/tests/test_db_generation.py

      - name: Functional tests
        run: |
          echo "Running Unit tests"
          pytest --ignore=systemtests --cov=build --cov=monitors --cov=queue_processors --cov=scripts --cov=utils --cov=WebApp/autoreduce_webapp --cov=docker_reduction --cov=paths --cov=plotting --cov=model --ignore=webtests/
          echo "Running System Tests"
          pytest systemtests --cov-append

  pylint:
    runs-on: ubuntu-18.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: test-user
          MYSQL_PASSWORD: pass
          MYSQL_DATABASE: autoreduction
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: ./.github/actions/build-autoreduction

      - name: Pylint tests
        run: |
          pylint build
          pylint docker_reduction
          pylint model
          pylint monitors
          pylint queue_processors
          pylint scripts
          pylint systemtests
          pylint utils
          pylint plotting
          pylint webtests

  selenium:
    runs-on: ubuntu-18.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: test-user
          MYSQL_PASSWORD: pass
          MYSQL_DATABASE: autoreduction
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: ./.github/actions/build-autoreduction

      # Temporary workaround for double backend in settings breaking authentication
      - name: Authentication workaround
        run: sed -i '79d' WebApp/autoreduce_webapp/autoreduce_webapp/test_settings.py

      - name: Set up chromedriver
        run: |
          wget https://chromedriver.storage.googleapis.com/87.0.4280.20/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          export PATH=$PATH:./chromedriver_linux64/
      - name: Install chrome
        run: sudo apt-get install -y google-chrome-stable

      - name: Run Django server
        run: |
          cd WebApp/autoreduce_webapp
          python manage.py runserver &
          sleep 10

      - name: Run tests
        run: |
          mv webtests/config.json.example webtests/config.json
          python -m webtests.runner --headless

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screenshots
          path: webtests/screenshots/

  coveralls:
    runs-on: ubuntu-18.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: test-user
          MYSQL_PASSWORD: pass
          MYSQL_DATABASE: autoreduction
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: ./.github/actions/build-autoreduction

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls
