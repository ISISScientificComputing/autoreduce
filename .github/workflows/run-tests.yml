name: Tests

on: 
  push:
  pull_request:
    types: [opened]

jobs:     
  test:
    runs-on: ubuntu-18.04

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: test-user
          MYSQL_PASSWORD: pass
          MYSQL_DATABASE: autoreduction
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      
      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 3306 -u root -e "SHOW DATABASES"
      
      - name: Set up database
        run: mysql --host 127.0.0.1 --port 3306 -u root < build/database/reset_autoreduction_db.sql
      
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      
      - name: Install Autoreduction
        run: |
          python -m pip install --upgrade pip
          pip3 install -e .
      
      - name: Install test suite dependencies
        run: pip3 install -r requirements.txt

      - name: Setup test environment
        run: |
         python3 setup.py test_settings
         # Externals must be after test_settings
         python3 setup.py externals -s activemq
         python3 setup.py database
         cat build.log
         _LOCAL_PYTHON_PATH=$(which python3)
         sudo $_LOCAL_PYTHON_PATH setup.py start
      
      - name: Perform initial check of database
        run: py.test build/tests/test_db_generation.py

      - name: Functional tests
        run: |
          echo "Running Unit tests"
          py.test --ignore=systemtests --cov=build --cov=monitors --cov=queue_processors --cov=scripts --cov=utils --cov=WebApp/autoreduce_webapp --cov=docker_reduction --cov=paths --cov=plotting --cov=model
          echo "Running System Tests"
          py.test systemtests --cov-append
      
      - name: Pylint tests
        run: |
          pylint build
          pylint docker_reduction
          pylint model
          pylint monitors
          pylint queue_processors
          pylint scripts
          pylint systemtests
          pylint utils
          pylint plotting
          
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls
